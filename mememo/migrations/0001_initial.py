# Generated by Django 4.2.6 on 2023-10-10 04:34

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mememo.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MememoPermissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": (
                    (
                        "third_party_gateway",
                        "User can act as a third-party authentication gateway.",
                    ),
                    ("gatekeeper", "User can list pending challenge codes."),
                ),
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.CharField(
                        default=mememo.models.new_id,
                        editable=False,
                        max_length=8,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cmd", models.TextField()),
                ("env", models.JSONField(default=dict)),
                ("service_name", models.CharField(max_length=128)),
                (
                    "last_run_dt",
                    models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0)),
                ),
                (
                    "next_run_dt",
                    models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0)),
                ),
                ("run_freq_minutes", models.IntegerField(default=5)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ThirdPartyAuthentication",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.CharField(
                        default=mememo.models.new_id,
                        editable=False,
                        max_length=8,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("expiry_dt", models.DateTimeField()),
                (
                    "challenge",
                    models.CharField(
                        default=mememo.models.new_challenge, max_length=128
                    ),
                ),
                ("identity", models.TextField(db_index=True, unique=True)),
                ("alias", models.CharField(max_length=150)),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceGrants",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("service_name", models.CharField(max_length=128)),
                ("grant_name", models.CharField(max_length=128)),
            ],
            options={
                "unique_together": {("service_name", "grant_name")},
            },
        ),
        migrations.CreateModel(
            name="ServiceGrantAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("expiry_dt", models.DateTimeField()),
                (
                    "grant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mememo.servicegrants",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="mememo.topic"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "topic")},
            },
        ),
    ]
